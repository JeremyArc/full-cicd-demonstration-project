name: CI Test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node18
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: unit test
        run: npm test

  build_push_and_update:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build an image from Dockerfile, tag and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "ECR_REGISTRY=${ECR_REGISTRY}" >> $GITHUB_OUTPUT
          echo "ECR_REPOSITORY=${ECR_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        id: sast
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "${{ steps.build-image.outputs.ECR_REGISTRY }}/${{ steps.build-image.outputs.ECR_REPOSITORY }}:${{ steps.build-image.outputs.IMAGE_TAG }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Push image after Run Trivy vulnerability scanner is complete
        id: push-image
        run: |
          docker push "${{ steps.build-image.outputs.ECR_REGISTRY }}/${{ steps.build-image.outputs.ECR_REPOSITORY }}:${{ steps.build-image.outputs.IMAGE_TAG }}"

      - name: Update image tag
        run: |
          sed -i 's|720133173047.dkr.ecr.ap-southeast-1.amazonaws.com/jessada-full-cicd:.*|720133173047.dkr.ecr.ap-southeast-1.amazonaws.com/jessada-full-cicd:${{ github.sha }}|g' ./deployment/dummy-app/k8s/deployment.yaml

      - name: Commit change to current PR branch
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automated image tag update
          file_pattern: "*.yaml"
